/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TransactionEntryView.java
 *
 * Created on Sep 17, 2013, 9:47:37 PM
 * @author Pankaj Soni
 *
 */
package com.pks.gms.ui;

import com.pks.gms.domain.Category;
import com.pks.gms.domain.Transaction;
import com.pks.gms.domain.User;
import java.math.BigInteger;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import org.jdesktop.application.Action;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.orm.hibernate3.HibernateTemplate;

/**
 * Transaction Entry View
 *
 * @author Pankaj Soni
 */
public class TransactionEntryView extends javax.swing.JFrame {

    String[] paths = {"classpath:com/pks/gms/resources/spring/applicationContext.xml"};
    ApplicationContext context = new ClassPathXmlApplicationContext(paths);
    private static final Logger LOGGER = LoggerFactory.getLogger(TransactionEntryView.class);

    /** Creates new form TransactionEntryView */
    public TransactionEntryView() {
        try {
//            UIManager.setLookAndFeel(new NimbusLookAndFeel());
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception ex) {
            LOGGER.error(ex.getMessage());
            try {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            } catch (Exception ex1) {
                LOGGER.error(ex1.getMessage());
            }

        }
        initComponents();
        hibernateTemplate = (HibernateTemplate) context.getBean(HibernateTemplate.class);
        List<Category> categorys = hibernateTemplate.findByNamedQuery("Category.findAll");
        Vector<Category> vector = new Vector<Category>(categorys);
        categoryField.setModel(new DefaultComboBoxModel(vector));
        List<User> users = hibernateTemplate.findByNamedQuery("User.findAll");
        Vector<User> v = new Vector<User>(users);
        userField.setModel(new DefaultComboBoxModel(v));
        entryDateField.setText(dateFormat.format(new Date()));
        tranDateField.setText(entryDateField.getText());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tranRecord = new com.pks.gms.domain.Transaction();
        user = new com.pks.gms.domain.User();
        category = new com.pks.gms.domain.Category();
        amountLabel = new javax.swing.JLabel();
        commentsLabel = new javax.swing.JLabel();
        creditDebitLabel = new javax.swing.JLabel();
        entryDateLabel = new javax.swing.JLabel();
        tranDateLabel = new javax.swing.JLabel();
        categoryLabel = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        amountField = new javax.swing.JTextField();
        commentsField = new javax.swing.JTextField();
        creditRadio = new javax.swing.JRadioButton();
        debitRadio = new javax.swing.JRadioButton();
        entryDateField = new javax.swing.JTextField();
        tranDateField = new javax.swing.JTextField();
        userField = new javax.swing.JComboBox();
        categoryField = new javax.swing.JComboBox();
        saveButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        creditDebitCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.pks.gms.GmsApp.class).getContext().getResourceMap(TransactionEntryView.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        amountLabel.setText(resourceMap.getString("amountLabel.text")); // NOI18N
        amountLabel.setName("amountLabel"); // NOI18N

        commentsLabel.setText(resourceMap.getString("commentsLabel.text")); // NOI18N
        commentsLabel.setName("commentsLabel"); // NOI18N

        creditDebitLabel.setText(resourceMap.getString("creditDebitLabel.text")); // NOI18N
        creditDebitLabel.setName("creditDebitLabel"); // NOI18N

        entryDateLabel.setText(resourceMap.getString("entryDateLabel.text")); // NOI18N
        entryDateLabel.setName("entryDateLabel"); // NOI18N

        tranDateLabel.setText(resourceMap.getString("tranDateLabel.text")); // NOI18N
        tranDateLabel.setName("tranDateLabel"); // NOI18N

        categoryLabel.setText(resourceMap.getString("categoryLabel.text")); // NOI18N
        categoryLabel.setName("categoryLabel"); // NOI18N

        userLabel.setText(resourceMap.getString("userLabel.text")); // NOI18N
        userLabel.setName("userLabel"); // NOI18N

        amountField.setText(resourceMap.getString("amountField.text")); // NOI18N
        amountField.setName("amountField"); // NOI18N

        commentsField.setText(resourceMap.getString("commentsField.text")); // NOI18N
        commentsField.setName("commentsField"); // NOI18N

        buttonGroup1.add(creditRadio);
        creditRadio.setText(resourceMap.getString("creditRadio.text")); // NOI18N
        creditRadio.setName("creditRadio"); // NOI18N

        buttonGroup1.add(debitRadio);
        debitRadio.setSelected(true);
        debitRadio.setText(resourceMap.getString("debitRadio.text")); // NOI18N
        debitRadio.setName("debitRadio"); // NOI18N

        entryDateField.setText(resourceMap.getString("entryDateField.text")); // NOI18N
        entryDateField.setName("entryDateField"); // NOI18N

        tranDateField.setText(resourceMap.getString("tranDateField.text")); // NOI18N
        tranDateField.setName("tranDateField"); // NOI18N

        userField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pankaj" }));
        userField.setName("userField"); // NOI18N

        categoryField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Others" }));
        categoryField.setName("categoryField"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.pks.gms.GmsApp.class).getContext().getActionMap(TransactionEntryView.class, this);
        saveButton.setAction(actionMap.get("saveAction")); // NOI18N
        saveButton.setText(resourceMap.getString("saveButton.text")); // NOI18N
        saveButton.setName("saveButton"); // NOI18N

        newButton.setAction(actionMap.get("newAction")); // NOI18N
        newButton.setText(resourceMap.getString("newButton.text")); // NOI18N
        newButton.setName("newButton"); // NOI18N

        creditDebitCheckBox.setSelected(true);
        creditDebitCheckBox.setText(resourceMap.getString("creditDebitCheckBox.text")); // NOI18N
        creditDebitCheckBox.setName("creditDebitCheckBox"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tranDateLabel)
                                    .addComponent(entryDateLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tranDateField, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                    .addComponent(entryDateField, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(commentsLabel)
                                    .addComponent(amountLabel)
                                    .addComponent(creditDebitLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(commentsField, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(creditRadio)
                                        .addGap(18, 18, 18)
                                        .addComponent(debitRadio))
                                    .addComponent(amountField, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(categoryLabel)
                                    .addComponent(userLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userField, 0, 137, Short.MAX_VALUE)
                                    .addComponent(categoryField, 0, 137, Short.MAX_VALUE))))
                        .addGap(101, 101, 101))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(saveButton)
                        .addGap(18, 18, 18)
                        .addComponent(newButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(creditDebitCheckBox)
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(commentsLabel)
                        .addComponent(commentsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(amountLabel)
                            .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(creditDebitLabel)
                    .addComponent(creditRadio)
                    .addComponent(debitRadio)
                    .addComponent(creditDebitCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entryDateLabel)
                    .addComponent(entryDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tranDateLabel)
                    .addComponent(tranDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryLabel)
                    .addComponent(categoryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userLabel)
                    .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(newButton))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TransactionEntryView().setVisible(true);
            }
        });
    }

    @Action
    public void newAction() {
        tranRecord = new Transaction();
        JOptionPane.showMessageDialog(this, "New Record Entry");
        amountField.setText("0");
    }

    @Action
    public void saveAction() {
        tranRecord.setAmount(new BigInteger(amountField.getText()));
        tranRecord.setComments(commentsField.getText());
        if (debitRadio.isSelected()) {
            tranRecord.setCreditDebit("D");
        } else {
            tranRecord.setCreditDebit("C");
        }
        try {
            tranRecord.setEntryDate(dateFormat.parse(entryDateField.getText()));
            tranRecord.setTranDate(dateFormat.parse(tranDateField.getText()));
        } catch (ParseException ex) {
            LOGGER.error(ex.getLocalizedMessage());
        }

        tranRecord.setUid((User) userField.getSelectedItem());
        tranRecord.setCid((Category) categoryField.getSelectedItem());

        LOGGER.debug("tranRec: " + tranRecord);
        if (creditDebitCheckBox.isSelected()) {
            try {
                Transaction dupTranRecord = (Transaction) tranRecord.clone();
                LOGGER.debug("dup tranRec: " + dupTranRecord);
                hibernateTemplate.saveOrUpdate(dupTranRecord);
            } catch (CloneNotSupportedException ex) {
            }
        }
        hibernateTemplate.saveOrUpdate(tranRecord);
        JOptionPane.showMessageDialog(this, "Data Saved");
    }
    @Autowired
    HibernateTemplate hibernateTemplate;
    SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yy");

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountField;
    private javax.swing.JLabel amountLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.pks.gms.domain.Category category;
    private javax.swing.JComboBox categoryField;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JTextField commentsField;
    private javax.swing.JLabel commentsLabel;
    private javax.swing.JCheckBox creditDebitCheckBox;
    private javax.swing.JLabel creditDebitLabel;
    private javax.swing.JRadioButton creditRadio;
    private javax.swing.JRadioButton debitRadio;
    private javax.swing.JTextField entryDateField;
    private javax.swing.JLabel entryDateLabel;
    private javax.swing.JButton newButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField tranDateField;
    private javax.swing.JLabel tranDateLabel;
    private com.pks.gms.domain.Transaction tranRecord;
    private com.pks.gms.domain.User user;
    private javax.swing.JComboBox userField;
    private javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables
}
